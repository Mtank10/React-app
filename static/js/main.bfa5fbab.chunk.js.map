{"version":3,"sources":["components/Navbar.js","components/Textform.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","aboutText","placeholder","onClick","togglemode","role","htmlfor","Textform","useState","text","setText","heading","value","onChange","event","console","log","target","rows","newText","toUpperCase","showAlert","toLowerCase","split","length","defaultProps","Alert","alert","msg","App","setmode","setAlert","message","setTimeout","document","body","style","backgroundColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.bfa5fbab.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n//import { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n       <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n    {/*<Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>*/}\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          {/*<Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>*/}\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"/\">{props.aboutText}</a>\r\n          {/*<Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>*/}\r\n        </li>\r\n      </ul>\r\n      <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n      </form>\r\n        <div className={`form-check form-switch mx-3 text-${props.mode==='light'?'dark':'light'}`}>\r\n          <input className=\"form-check-input\" type=\"checkbox\" onClick ={props.togglemode} role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n          <label className=\"form-check-label\" htmlfor=\"flexSwitchCheckDefault \">Enable LightMode</label>\r\n        </div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: 'Set title here',\r\n    aboutText:'About text here'\r\n};\r\n","import React, {useState} from 'react'\r\n\r\nexport default function Textform(props) {\r\n\r\n    const handleUpClick = ()=>{\r\n        console.log(\"uppercase was clicked\" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"convert to upper case\",\"success\");\r\n\r\n    }\r\n    const handleLoClick = ()=>{\r\n        console.log(\"lower was clicked\" + text);\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"convert to lower case\",\"success\");\r\n    }\r\n    const handleOnChange = (event)=>{\r\n        console.log(\"on Click\");\r\n        setText(event.target.value);\r\n    }\r\n    const [text, setText] = useState('');\r\n    //setText(\"new Text\");// Correct way to change the state.\r\n    return (\r\n        <>\r\n        <div className=\"container\">\r\n            <h1 className=\"my-2\">About Us</h1>\r\n         <div>\r\n            <div className=\"mb-3\">\r\n                <h2>{props.heading}</h2>\r\n                <textarea className=\"form-control\" value={text}  onChange={handleOnChange} id=\"myBox\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-3\" onClick={handleUpClick}>Convert to uppercase</button>\r\n            <button className=\"btn btn-primary mx-3\" onClick={handleLoClick}>Convert to lowercase</button>\r\n         </div>\r\n        </div>\r\n        <div className=\"container my-3\">\r\n            <h1>Your Text Summary</h1>\r\n            <p>{text.split(\" \").length} words and {text.length} charachters</p>\r\n            <p>{0.08 *text.split(\" \").length} Minutes read</p>\r\n            <h2>Preview</h2>\r\n            <p>{text}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    //const capitalize = (word)=>{\r\n      //  const lower = word.toLowerCase();\r\n        //return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n    //}\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n          <strong>{props.alert.type}</strong> {props.alert.msg}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert","//import logo from './logo.svg';\nimport './App.css';\nimport { useState } from 'react';\n//import About from './components/About';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\nimport Alert from './components/Alert';\n//import {\n  //BrowserRouter as Router,\n  //Switch,\n  //Route,\n//} from \"react-router-dom\";\n\n\nfunction App() {\n        const [mode, setmode] = useState('dark');//wheater dark mode is enabled\n        const [alert, setAlert] = useState(null);\n\n        const showAlert =(message,type)=>{\n          setAlert({\n            msg: message,\n            type:type\n          })\n          setTimeout(() => {\n            setAlert([null]);\n          }, 1000);\n        }\n        const togglemode = ()=>{\n            if(mode === 'light'){\n              setmode('dark');\n              document.body.style.backgroundColor =\"gray\";\n              showAlert('Dark mode is enable','success');\n            }\n            else{\n              setmode('light');\n              document.body.style.backgroundColor =\"white\";\n              showAlert('light mode is enable','success');\n            }\n        }\n        //or not\n  return (\n    <>\n    {/*<Navbar title = \"firstApp\" aboutText=\"About FirstApp\"/>*/}\n     {/*<Navbar/>*/}\n    {/* <Router>*/}\n     <Navbar title=\"firstApp\" mode={mode} togglemode={togglemode} />\n     <Alert alert ={alert}/>\n     <div className=\"container\" my-3>\n       {/*<Switch>\n          <Route exact path=\"/about\">\n            <About />\n          </Route>\n          <Route exact path=\"/\">\n          </Route>\n     </Router>\n        </Switch>*/}\n      {/*<About />*/}\n        <Textform showAlert ={showAlert} heading=\"Enter the text to analyse below\"/>\n     </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}